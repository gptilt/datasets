import polars as pl


PARTICIPANTS = {
    'matchId': pl.String,
    'participantId': pl.Int16,
    'puuid': pl.String,
    'summonerId': pl.String,
    'summonerLevel': pl.Int32,
    'summonerName': pl.String,
    # Pre-Game
    'ban': pl.Int32,
    'championId': pl.Int32,
    'championName': pl.String,
    'championTransform': pl.Int16,
    'individualPosition': pl.Int16,
    'lane': pl.String,
    'pickTurn': pl.Int16,
    'role': pl.String,
    'rune_primary_0': pl.Int16,
    'rune_primary_1': pl.Int16,
    'rune_primary_2': pl.Int16,
    'rune_primary_3': pl.Int16,
    'rune_secondary_0': pl.Int16,
    'rune_secondary_1': pl.Int16,
    'rune_shard_defense': pl.Int16,
    'rune_shard_flex': pl.Int16,
    'rune_shard_offense': pl.Int16,
    'summoner1Id': pl.Int16,
    'summoner2Id': pl.Int16,
    'teamId': pl.Int16,
    'teamPosition': pl.Int16,
    # Pings
    'allInPings': pl.Int32,
    'assistMePings': pl.Int32,
    'basicPings': pl.Int32,
    'commandPings': pl.Int32,
    'dangerPings': pl.Int32,
    'enemyMissingPings': pl.Int32,
    'enemyVisionPings': pl.Int32,
    'getBackPings': pl.Int32,
    'holdPings': pl.Int32,
    'needVisionPings'
    'onMyWayPings': pl.Int32,
    'pushPings': pl.Int32,
    'retreatPings': pl.Int32,
    'visionClearedPings': pl.Int32,
    # Continuous Features
    'damageDealtToBuildings': pl.Int32,
    'damageDealtToObjectives': pl.Int32,
    'damageDealtToTurrets': pl.Int32,
    'damageSelfMitigated': pl.Int32,
    'largestCriticalStrike': pl.Int16,
    'magicDamageDealt': pl.Int32,
    'magicDamageDealtToChampions': pl.Int32,
    'magicDamageTaken': pl.Int32,
    'physicalDamageDealt': pl.Int32,
    'physicalDamageDealtToChampions': pl.Int32,
    'physicalDamageTaken': pl.Int32,
    'totalDamageDealt': pl.Int32,
    'totalDamageDealtToChampions': pl.Int32,
    'totalDamageShieldedOnTeammates': pl.Int32,
    'totalDamageTaken': pl.Int32,
    'totalHeal': pl.Int32,
    'totalHealsOnTeammates': pl.Int32,
    'trueDamageDealt': pl.Int32,
    'trueDamageDealtToChampions': pl.Int32,
    'trueDamageTaken': pl.Int32,
    # Time Features
    'timeCCingOthers': pl.Int32,
    'timePlayed': pl.Int32,
    'totalTimeCCDealt': pl.Int32,
    'totalTimeSpentDead': pl.Int32,
    # Action Boolean Features
    'firstBloodAssist': pl.Boolean,
    'firstBloodKill': pl.Boolean,
    'firstTowerAssist': pl.Boolean,
    'firstTowerKill': pl.Boolean,
    # Action Count Features
    'baronKills': pl.Int16,
    'bountyLevel': pl.Int16,
    'consumablesPurchased': pl.Int16,
    'detectorWardsPlaced': pl.Int16,
    'doubleKills': pl.Int16,
    'dragonKills': pl.Int16,
    'inhibitorKills': pl.Int16,
    'inhibitorTakedowns': pl.Int16,
    'inhibitorsLost': pl.Int16,
    'itemsPurchased': pl.Int16,
    'killingSprees': pl.Int16,
    'largestKillingSpree': pl.Int16,
    'largestMultiKill': pl.Int16,
    'longestTimeSpentLiving': pl.Int16,
    'neutralMinionsKilled': pl.Int16,
    'nexusKills': pl.Int16,
    'nexusLost': pl.Int16,
    'nexusTakedowns': pl.Int16,
    'objectivesStolen': pl.Int16,
    'objectivesStolenAssists': pl.Int16,
    'pentaKills': pl.Int16,
    'quadraKills': pl.Int16,
    'sightWardsBoughtInGame': pl.Int16,
    'spell1Casts': pl.Int16,
    'spell2Casts': pl.Int16,
    'spell3Casts': pl.Int16,
    'spell4Casts': pl.Int16,
    'summoner1Casts': pl.Int16,
    'summoner2Casts': pl.Int16,
    'totalAllyJungleMinionsKilled': pl.Int16,
    'totalEnemyJungleMinionsKilled': pl.Int16,
    'totalMinionsKilled': pl.Int16,
    'totalUnitsHealed': pl.Int16,
    'tripleKills': pl.Int16,
    'turretKills': pl.Int16,
    'turretTakedowns': pl.Int16,
    'turretsLost': pl.Int16,
    'unrealKills': pl.Int16,
    'visionWardsBoughtInGame': pl.Int16,
    'wardsKilled': pl.Int16,
    'wardsPlaced': pl.Int16,
    # Scoreboard
    'item0': pl.Int16,
    'item1': pl.Int16,
    'item2': pl.Int16,
    'item3': pl.Int16,
    'item4': pl.Int16,
    'item5': pl.Int16,
    'item6': pl.Int16,
    'kills': pl.Int16,
    'champExperience': pl.Int32,
    'champLevel': pl.Int16,
    'assists': pl.Int16,
    'deaths': pl.Int16,
    'goldEarned': pl.Int32,
    'goldSpent': pl.Int32,
    'visionScore': pl.Int16,
    # System
    'eligibleForProgression': pl.Boolean,
    'gameEndedInEarlySurrender': pl.Boolean,
    'gameEndedInSurrender': pl.Boolean,
    'placement': pl.Int16,
    'playerSubteamId': pl.Int16,
    'profileIcon': pl.Int32,
    'subteamPlacement': pl.Int16,
    'teamEarlySurrendered': pl.Boolean,
    'win': pl.Boolean,
}

MATCHES = {
    # Match
    'endOfGameResult': pl.String,
    # 'gameCreation': pl.Int64,
    'gameDuration': pl.Int32,
    'gameEndTimestamp': pl.Int64,
    'gameId': pl.Int64,
    # 'gameMode': pl.String(),
    # 'gameName' pl.String(),
    'gameStartTimestamp': pl.Int64,
    # 'gameType': pl.String(),
    # 'gameVersion': pl.String,
    # 'mapId': pl.Int8,
    'matchId': pl.String,
    'patch': pl.String,
    'platformId': pl.String,
    # 'queueId': pl.Int16,
    'region': pl.String,
    # Blue Team Feat State
    'team_100_EPIC_MONSTER_KILL': pl.Int16,
    'team_100_FIRST_BLOOD': pl.Int16,
    'team_100_FIRST_TURRET': pl.Int16,
    # Red Team Feat State
    'team_200_EPIC_MONSTER_KILL': pl.Int16,
    'team_200_FIRST_BLOOD': pl.Int16,
    'team_200_FIRST_TURRET': pl.Int16,
    # Blue Team Objectives
    'team_100_atakhan_first': pl.Boolean,
    'team_100_atakhan_kills': pl.Int16,
    'team_100_baron_first': pl.Boolean,
    'team_100_baron_kills': pl.Int16,
    'team_100_champion_first': pl.Boolean,
    'team_100_champion_kills': pl.Int16,
    'team_100_dragon_first': pl.Boolean,
    'team_100_dragon_kills': pl.Int16,
    'team_100_horde_first': pl.Boolean,
    'team_100_horde_kills': pl.Int16,
    'team_100_inhibitor_first': pl.Boolean,
    'team_100_inhibitor_kills': pl.Int16,
    'team_100_riftHerald_first': pl.Boolean,
    'team_100_riftHerald_kills': pl.Int16,
    'team_100_tower_first': pl.Boolean,
    'team_100_tower_kills': pl.Int16,
    # Red Team Objectives
    'team_200_atakhan_first': pl.Boolean,
    'team_200_atakhan_kills': pl.Int16,
    'team_200_baron_first': pl.Boolean,
    'team_200_baron_kills': pl.Int16,
    'team_200_champion_first': pl.Boolean,
    'team_200_champion_kills': pl.Int16,
    'team_200_dragon_first': pl.Boolean,
    'team_200_dragon_kills': pl.Int16,
    'team_200_horde_first': pl.Boolean,
    'team_200_horde_kills': pl.Int16,
    'team_200_inhibitor_first': pl.Boolean,
    'team_200_inhibitor_kills': pl.Int16,
    'team_200_riftHerald_first': pl.Boolean,
    'team_200_riftHerald_kills': pl.Int16,
    'team_200_tower_first': pl.Boolean,
    'team_200_tower_kills': pl.Int16,
    'tournamentCode': pl.String,
    'winner_team_id': pl.Int16
}

PL_CHAMPION_STATS = pl.Struct([
    pl.Field("abilityHaste", pl.Int16),
    pl.Field("abilityPower", pl.Int16),
    pl.Field("armor", pl.Int16),
    pl.Field("armorPen", pl.Int16),
    pl.Field("armorPenPercent", pl.Int16),
    pl.Field("attackDamage", pl.Int16),
    pl.Field("attackSpeed", pl.Int16),
    pl.Field("bonusArmorPenPercent", pl.Int16),
    pl.Field("bonusMagicPenPercent", pl.Int16),
    pl.Field("ccReduction", pl.Int16),
    pl.Field("cooldownReduction", pl.Int16),
    pl.Field("health", pl.Int32),
    pl.Field("healthMax", pl.Int32),
    pl.Field("healthRegen", pl.Int32),
    pl.Field("lifesteal", pl.Int16),
    pl.Field("magicPen", pl.Int16),
    pl.Field("magicPenPercent", pl.Int16),
    pl.Field("magicResist", pl.Int16),
    pl.Field("movementSpeed", pl.Int32),
    pl.Field("omnivamp", pl.Int16),
    pl.Field("physicalVamp", pl.Int16),
    pl.Field("power", pl.Int16),
    pl.Field("powerMax", pl.Int16),
    pl.Field("powerRegen", pl.Int16),
    pl.Field("spellVamp", pl.Int16),
])

PL_DAMAGE_STATS = pl.Struct([
    pl.Field("magicDamageDone", pl.Int32),
    pl.Field("magicDamageDoneToChampions", pl.Int32),
    pl.Field("magicDamageTaken", pl.Int32),
    pl.Field("physicalDamageDone", pl.Int32),
    pl.Field("physicalDamageDoneToChampions", pl.Int32),
    pl.Field("physicalDamageTaken", pl.Int32),
    pl.Field("totalDamageDone", pl.Int32),
    pl.Field("totalDamageDoneToChampions", pl.Int32),
    pl.Field("totalDamageTaken", pl.Int32),
    pl.Field("trueDamageDone", pl.Int32),
    pl.Field("trueDamageDoneToChampions", pl.Int32),
    pl.Field("trueDamageTaken", pl.Int32)
])

PL_DAMAGE_DEALT_INNER_STRUCT = pl.Struct([
    pl.Field("basic", pl.Boolean),
    pl.Field("magicDamage", pl.Int32),
    pl.Field("name", pl.String),
    pl.Field("participantId", pl.Int16),
    pl.Field("physicalDamage", pl.Int32),
    pl.Field("spellName", pl.String),
    pl.Field("spellSlot", pl.Int32),
    pl.Field("trueDamage", pl.Int32),
    pl.Field("type", pl.String)
])

PL_DAMAGE_DEALT = pl.List(PL_DAMAGE_DEALT_INNER_STRUCT)

EVENTS = {
    'matchId': pl.String,
    'eventId': pl.Int16,
    'positionX': pl.Int32,
    'positionY': pl.Int32,
    'teamId': pl.Int16,
    'timestamp': pl.Int32,
    'type': pl.String,
    'winningTeam': pl.Int16,
    # Feats of Strength
    'featType': pl.Int16,
    'featValue': pl.Int16,
    # Gold
    'currentGold': pl.Int32,
    'goldGain': pl.Int16,
    'goldPerSecond': pl.Int16,
    'shutdownBounty': pl.Int16,
    'totalGold': pl.Int32,
    # Items
    'afterId': pl.Int32,
    'beforeId': pl.Int32,
    'inventoryIds': pl.List(pl.Int32),
    'inventoryCounts': pl.List(pl.Int8),
    'itemId': pl.Int32,
    # Jungle
    'jungleMinionsKilled': pl.Int16,
    'monsterSubType': pl.String,
    'monsterType': pl.String,
    'name': pl.String,
    # Kills
    'bounty': pl.Int16,
    'killerId': pl.Int16,
    'killerTeamId': pl.Int16,
    'killStreakLength': pl.Int16,
    'killType': pl.String,
    'multiKillLength': pl.Int16,
    'numberOfAssists': pl.Int8,
    'victimDamageDealt': PL_DAMAGE_DEALT,
    'victimDamageReceived': PL_DAMAGE_DEALT,
    'victimId': pl.Int16,
    # Lanes
    'buildingType': pl.String,
    'laneType': pl.String,
    'towerType': pl.String,
    # Level
    'level': pl.Int16,
    'levelUpType': pl.String,
    'skillSlot': pl.Int16,
    'xp': pl.Int32,
    # Player
    # 'assistingParticipantIds': pl.List(pl.Int16), # Uncomment if needed
    'championStats': PL_CHAMPION_STATS,
    'damageStats': PL_DAMAGE_STATS,
    'minionsKilled': pl.Int16,
    'participantId': pl.Int16,
    'timeEnemySpentControlled': pl.Int32,
    # Wards
    # 'creatorId': pl.Int16, # Uncomment if needed
    'wardType': pl.String,
}